# -*- coding: utf-8 -*-
"""encapsulation.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1hzCbF_i9zbdOriw82RGT61EaZ2nJjuA4
"""

# encapsulation in python is data(variables)+logic(functions) in a single unit
# protect the data from direct access
# use double underscore to hide the private information (__)

# q1. create student class that take name and marks of 3 subject as arguments in constructor.the create a method to print average.(from object and classes)
class Student:
  def __init__(self,name,marks):
    self.name = name
    self.marks = marks
  def get_avg(self):
    sum = 0
    for val in self.marks:
      sum+=val
    print(f"hii {self.name} your average score is {sum/3}")
s1 = Student("deepak",[99,34,56])
s1.get_avg()                    #hii deepak your average score is 63.0


# for changin name
class Student:
  def __init__(self,name,marks):
    self.name = name
    self.marks = marks
  def get_avg(self):
    sum = 0
    for val in self.marks:
      sum+=val
    print(f"hii {self.name} your average score is {sum/3}")
s1 = Student("deepak",[99,34,56])
s1.name = "ram"
s1.get_avg()

# bank program
class BankAccount:
  def __init__(self,owner,balance):
    self.owner = owner
    self.__balance = balance
  def deposit(self,amount):
    if amount > 0:
      self.__balance+=amount
  def withdraw(self,amount):
    if amount < self.__balance:
      self.__balance-=amount
    else:
      print("insufficient balance")
  def get_balance(self):
    return self.__balance
acc = BankAccount("deepak",1000)
acc.deposit(500)
acc.withdraw(100)
acc.get_balance()

Why Encapsulation is Important:
Benefit                            	Why it matters
 Data hiding	                    Prevent unwanted access
 Controlled access	              Only via methods
 Secure programming	              Useful in banking, login, APIs
 Easy maintenance	                Code is better organized

